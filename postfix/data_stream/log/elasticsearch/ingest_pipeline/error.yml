---
description: |
    Pipeline for processing Postfix error delivery agent events.  The Postfix error delivery agent processes errored requests from
    the queue manager.
processors:
  - append:
      description: Append pipeline trace tag if enabled
      field: tags
      value:
        - "pipeline: error"
      if: ctx.tags != null && ctx.tags.contains('pipeline_trace_enabled')
  - grok:
      field: message
      patterns:
        - '(?<email.local_id>[0-9A-F]+|NOQUEUE): (to=<%{DATA:_tmp.email_to_address}>, orig_to=<%{DATA:_tmp.postfix_email_to_original_address}>|to=<%{DATA:_tmp.email_to_address}>), relay=%{DATA:_tmp.postfix_relay_info}, delay=%{BASE10NUM:postfix.delivery.delays.total_time:float}, delays=%{BASE10NUM:postfix.delivery.delays.before_qmgr_time:float}\/%{BASE10NUM:postfix.delivery.delays.in_qmgr_time:float}\/%{BASE10NUM:postfix.delivery.delays.connection_setup_time:float}\/%{BASE10NUM:postfix.delivery.delays.message_transmission_time:float}, dsn=(?<postfix.delivery.status_code.value>%{INT:postfix.delivery.status_code.class:long}\.%{INT:postfix.delivery.status_code.subject:long}\.%{INT:postfix.delivery.status_code.detail:long}), status=%{DATA:postfix.delivery.status} \(%{DATA:postfix.delivery.status_message}\)'
        - '%{GREEDYDATA:_tmp.catch_all}'
  - grok:
      field: postfix.delivery.status_message
      patterns:
        - '%{DATA}connect to %{HOSTNAME:server.domain}(\[%{IP:server.address}\]:%{POSINT:server.port:long})?: %{LOSTCONN:postfix.error.code}'
        - '%{DATA}(?<postfix.error.code>Name service error) for name=%{HOSTNAME:dns.question.name} type=%{WORD:dns.question.type}:%{GREEDYDATA}'
        - '%{DATA}(?<postfix.error.code>SASL authentication failed)%{DATA}%{HOSTNAME:server.domain}\[%{IP:server.ip}\]%{GREEDYDATA}'
      pattern_definitions:
        LOSTCONN: '(Connection timed out|No route to host|Connection refused|Network is unreachable|lost connection|timeout|SSL_accept error|Name service error|-1)'
      if: 'ctx.postfix?.delivery?.status_message != null'
      description: 'Extract various fields from the delivery status message'
  - grok:
      field: _tmp.postfix_relay_info
      patterns:
        - '%{HOSTNAME:server.domain}(\[%{IP:server.address}\]:%{POSINT:server.port:long})?'
      if: 'ctx._tmp?.postfix_relay_info != null'
      description: 'Extracts relay server details'  
  - set:
      field: server.domain
      value: "{{dns.question.name}}"
      description: Set server.domain to dns.question.name if populated
      if: ctx.dns?.question?.name != null
  - set:
      field: postfix.error.message
      value: "{{postfix.delivery.status_message}}"
      description: Set postfix.error.message to postfix.delivery.status_message
      if: 'ctx.postfix?.delivery?.status_message != null'
  - append:
      description: Add the email to address if extracted.
      field: email.to.address
      value: "{{{_tmp.email_to_address}}}"
      if: 'ctx._tmp?.email_to_address != null'
  - append:
      description: Add the original to address if extracted.
      field: postfix.email.to.original_address
      value: "{{{_tmp.postfix_email_to_original_address}}}"
      if: 'ctx._tmp?.postfix_email_to_original_address != null'  
  - append:
      description: 'Append info to event.type'
      field: event.type
      value: 
        - info
      allow_duplicates: false