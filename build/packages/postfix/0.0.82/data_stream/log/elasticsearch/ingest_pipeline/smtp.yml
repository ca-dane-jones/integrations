---
description: |
  Pipeline for processing Postfix SMTP and LMTP events.  
processors:
  - append:
      description: Append pipeline trace tag if enabled
      field: tags
      value:
        - "pipeline: smtp"
      if: ctx.tags != null && ctx.tags.contains('pipeline_trace_enabled')
  - grok:
      field: message
      patterns:
        - '(?<email.local_id>[0-9A-F]+|NOQUEUE): (to=<%{DATA:_tmp.email_to_address}>, orig_to=<%{DATA:_tmp.postfix_email_to_original_address}>|to=<%{DATA:_tmp.email_to_address}>), relay=%{DATA:_tmp.postfix_relay_info}, delay=%{BASE10NUM:postfix.delivery.delays.total_time:float}, delays=%{BASE10NUM:postfix.delivery.delays.before_qmgr_time:float}\/%{BASE10NUM:postfix.delivery.delays.in_qmgr_time:float}\/%{BASE10NUM:postfix.delivery.delays.connection_setup_time:float}\/%{BASE10NUM:postfix.delivery.delays.message_transmission_time:float}, dsn=(?<postfix.delivery.status_code.value>%{INT:postfix.delivery.status_code.class:long}\.%{INT:postfix.delivery.status_code.subject:long}\.%{INT:postfix.delivery.status_code.detail:long}), status=%{DATA:postfix.delivery.status} \(%{DATA:postfix.delivery.status_message}\)'
        - '(?<postfix.error.message>connect to %{HOSTNAME:server.domain}\[%{IP:server.address}\]:%{POSINT:server.port:long}: %{LOSTCONN:postfix.error.code})'
        - '%{TLS_AUTH_TYPE:postfix.smtpd.connection.tls.certificate_status} (?<_tmp.tls_connection>TLS connection established) to %{HOSTNAME:server.domain}\[%{IP:server.address}\]:%{POSINT:server.port:long}: TLSv(?<tls.version>[\d\.]+) with cipher (?<tls.cipher>[\w\d\-_]+) \(%{NUMBER}\/%{NUMBER} bits\)( key-exchange (?<postfix.smtpd.connection.tls.key_exchange_algorithm>[\w\d\-_]+) server-signature (?<postfix.smtpd.connection.tls.signature_algorithm>[\w\d\-_]+) \((%{POSINT:postfix.smtpd.connection.tls.signature_strength:long} bits|(?<_tmp.sig_algo_strength>[\w\d\-_]+))\) server-digest (?<postfix.smtpd.connection.tls.signature_digest>[\w\d\-_]+)|)'
        - '%{GREEDYDATA:_tmp.catch_all}'
      description: 'Extract fields from Postfix SMTP messages'
      pattern_definitions:
        LOSTCONN: '(Connection timed out|No route to host|Connection refused|Network is unreachable|lost connection|timeout|SSL_accept error|-1)'
        TLS_AUTH_TYPE: '(Anonymous|Trusted|Untrusted|Verified)'
  - grok:
      field: postfix.delivery.status_message
      patterns:
        - '(?<postfix.error.message>connect to %{HOSTNAME:server.domain}\[%{IP:server.address}\]:%{POSINT:server.port:long}: %{LOSTCONN:postfix.error.code})'
      pattern_definitions:
        LOSTCONN: '(Connection timed out|No route to host|Connection refused|Network is unreachable|lost connection|timeout|SSL_accept error|-1)'
      if: ctx.postfix?.delivery?.status_message != null
      ignore_failure: true
      description: Parse error and server information from a delivery status message
  - grok:
      field: _tmp.postfix_relay_info
      patterns:
        - '%{HOSTNAME:postfix.relay.server.domain}(\[%{IP:postfix.relay.server.address}\]:%{POSINT:postfix.relay.server.port:long})?'
      if: 'ctx._tmp?.postfix_relay_info != null && ctx._tmp?.postrix_relay_info != "none"'
      description: 'Extracts relay server details'
  - set:
      description: Set tls.established to true for successful TLS connections
      field: tls.established
      override: false
      ignore_empty_value: false
      value: true
      if: 'ctx._tmp?.tls_connection != null'
  - set:
      description: Set tls.version_protocol to tls for successful TLS connections
      field: tls.version_protocol
      override: false
      ignore_empty_value: false
      value: 'tls'
      if: 'ctx.tls?.version != null'
  - lowercase:
      description: 'Drop postfix.error.code to lowercase if populated'
      field: postfix.error.code
      if: "ctx.postfix?.error?.code != null"
  - append:
      description: Add the email to address if extracted.
      field: email.to.address
      value: "{{{_tmp.email_to_address}}}"
      if: 'ctx._tmp?.email_to_address != null'
  - append:
      description: Add the original to address if extracted.
      field: postfix.email.to.original_address
      value: "{{{_tmp.postfix_email_to_original_address}}}"
      if: 'ctx._tmp?.postfix_email_to_original_address != null'
  - registered_domain:
      field: postfix.relay.server.domain
      target_field: postfix.relay.server
      ignore_missing: true
      if: 'ctx.postfix?.relay?.server?.domain != "none" && ctx.postfix?.relay?.server?.domain != "local"'
  - convert:
      field: postfix.relay.server.address
      target_field: postfix.relay.server.ip
      type: ip
      ignore_failure: true
      ignore_missing: true
  - append:
      description: 'Append info to event.type'
      field: event.type
      value:
        - info
      allow_duplicates: false
  - set:
      description: Set email direction to inbound if relaying locally
      field: email.direction
      value: inbound
      if: 'ctx.postfix?.relay?.server?.domain != null && ctx._tmp?.local_email_domains != null && (ctx._tmp?.local_email_domains.contains(ctx.postfix?.relay?.server?.domain) || ctx._tmp?.local_email_domains.contains(ctx.postfix?.relay?.server?.registered_domain))'
  - set:
      description: Set email direction to outbound if relaying remotely
      field: email.direction
      value: outbound
      if: 'ctx._tmp?.local_email_domains != null && ctx.postfix?.relay?.server?.registered_domain != null && !ctx._tmp?.local_email_domains.contains(ctx.postfix?.relay?.server?.registered_domain)'
  - remove:
      description: 'Remove the defaulted event tag if this event was successfully processed.'
      field: _tmp.defaulted_event
      if: 'ctx._tmp?.catch_all == null'
