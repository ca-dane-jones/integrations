---
description: Pipeline for processing postfix logs
processors:
- set:
    field: ecs.version
    value: "8.11.0"
- set:
    field: event.kind
    value: "event"
- rename:
    field: message
    target_field: event.original
- set:
    field: event.timezone
    value: "{{_tmp.tz_offset}}"
    if: "ctx._tmp?.tz_offset != null && ctx._tmp?.tz_offset != 'local'"
- grok:
    description: Extract syslog base and message
    field: event.original
    patterns:
      - '^%{SYSLOG_BASE}%{SPACE}%{GREEDYDATA:message}'
    pattern_definitions:
      SYSLOG_BASE: '%{SYSLOGTIMESTAMP:_tmp.timestamp}%{SPACE}%{OBSERVER}%{SPACE}?(%{PROCESS_PARENT}|%{PROCESS_CHILD})'
      OBSERVER: '(?:%{IP:observer.ip}|%{HOSTNAME:observer.name})'
      PROCESS_CHILD: '(?<process.name>\w+/[\w-]+)\[%{POSINT:process.pid}\]:'
      PROCESS_PARENT: '%{WORD:process.name}\[%{POSINT:process.pgid}\]:'
- set:
    field: process.pid
    override: false
    ignore_empty_value: true
    copy_from: process.pgid
- date:
    field: _tmp.timestamp
    formats:
      - 'MMM d HH:mm:ss'
      - 'MMM dd HH:mm:ss'
    target_field: '@timestamp'
    timezone: '{{ event.timezone }}'
    if: 'ctx.event?.timezone != null && ctx._tmp?.timestamp != null'

on_failure:
- set:
    field: error.message
    value: '{{ _ingest.on_failure_message }}'
